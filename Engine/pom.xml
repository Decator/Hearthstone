<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>fr.univ_nantes.alma</groupId>
	<artifactId>Mini_Hearthstone</artifactId>
	<version>0.0.1</version>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.5.RELEASE</version>
    </parent>
    
    <repositories>
		<repository>
  		<id>jcenter</id>
  		<url>http://jcenter.bintray.com/</url>
		</repository>
	</repositories>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
        
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
 
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
 
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-websocket</artifactId>
        </dependency>
        
        <!--  Test dependencies -->
 
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
              
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>test</scope>
        </dependency>
        
        <dependency>
    		<groupId>org.junit.jupiter</groupId>
		    <artifactId>junit-jupiter-engine</artifactId>
		    <version>5.1.0</version>
		    <scope>test</scope>
		</dependency>
		
		<dependency>
		    <groupId>org.mockito</groupId>
		    <artifactId>mockito-core</artifactId>
		    <version>2.8.9</version>
		    <scope>test</scope>
		</dependency>
		
		<dependency>
		    <groupId>org.powermock</groupId>
		    <artifactId>powermock-module-junit4</artifactId>
		    <version>1.7.4</version>
		    <scope>test</scope>
		    <exclusions>
		        <exclusion>
		            <groupId>junit</groupId>
		            <artifactId>junit</artifactId>
		        </exclusion>
		    </exclusions>
		</dependency>
		
		<dependency>
		    <groupId>org.powermock</groupId>
		    <artifactId>powermock-api-mockito2</artifactId>
		    <version>1.7.4</version>
		    <scope>test</scope>
		</dependency>
		
		<dependency>
    		<groupId>pl.pojo</groupId>
    		<artifactId>pojo-tester</artifactId>
    		<version>0.7.6</version>
		</dependency>
		
		<dependency>
  			<groupId>org.apache.maven.plugins</groupId>
  			<artifactId>maven-site-plugin</artifactId>
  			<version>3.7.1</version>
  			<type>maven-plugin</type>
		</dependency>
        <dependency>
	        <groupId>org.apache.maven.doxia</groupId>
	        <artifactId>doxia-site-renderer</artifactId>
	        <version>1.8</version>
    	</dependency>
    	
    	<dependency>
    		<groupId>org.codehaus.mojo</groupId>
    		<artifactId>cobertura-maven-plugin</artifactId>
    		<version>2.7</version>
		</dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
  				<artifactId>maven-pmd-plugin</artifactId>
  				<version>3.11.0</version>
                <configuration>
                    <sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
                    <minimumTokens>100</minimumTokens>
                    <targetJdk>${maven.compiler.target}</targetJdk>
                    <rulesets>
                        <ruleset>/rulesets/java/sunsecure.xml</ruleset>
  						<ruleset>/rulesets/java/naming.xml</ruleset>
  						<ruleset>/rulesets/java/codesize.xml</ruleset>
                    </rulesets>
                </configuration>
            </plugin>
            
        </plugins>
    </build>

</project>
